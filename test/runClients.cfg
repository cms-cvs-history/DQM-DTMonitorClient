process CLIENTS = {    

    
    service = DaqMonitorROOTBackEnd{ }
    
    # the DQM Clients source
    source = DQMEventSource{ 
	untracked int32 maxEvents = -1
	untracked string meSubscriptionList = "MESubscriptionList.xml"
	untracked string qtList = "QualityTests.xml"
	untracked bool getQualityTestsFromFile = true	
	untracked int32 numberOfUpdatesToBeSkipped = 1
	untracked string server = "lxplus008.cern.ch"
	untracked int32 port = 9090
	untracked string name = "DTDQMClient"
	untracked int32 reconnect_delay_secs = 2
	untracked bool actAsServer = true
    }
    

    #Geometry
    include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
    include "Geometry/DTGeometry/data/dtGeometry.cfi"


    es_source ttrig = PoolDBESSource {  
	VPSet toGet = {
	    {
		string record = "DTTtrigRcd" 
		string tag = "ttrig"
	    }
	} 
	bool loadAll = true
	string connect = "sqlite_file:database/ttrig2.db"
	untracked string catalog = "file:database/ttrig2.xml"
	string timetype = "runnumber" 
	PSet DBParameters = {
            untracked string authenticationPath="."
            untracked int32 messageLevel=0
        }
    }
    
    
    module tTrigCalibrationTest = DTtTrigCalibrationTest{
       #Names of the quality test: it must match those specified in "qtList"
       untracked string tTrigTestName = "tTrigOffSet"
    }
	

    module resolutionTest = DTResolutionTest{
      	untracked bool debug = true
	untracked string outputFile = "DTResolutionTest.root"
	untracked bool writeHisto = true
	untracked string histoTag = "hResDist"	

        #Names of the quality tests: they must match those specified in "qtList"
	untracked string resDistributionTestName = "ResidualsDistributionGaussianTest"
	untracked string meanTestName = "ResidualsMeanInRange"
	untracked string sigmaTestName = "ResidualsSigmaInRange"
    }


    module efficiencyTest = DTEfficiencyTest{
	untracked bool debug = true
	untracked string outputFile = "DTEfficiencyTest.root"
        untracked bool writeHisto = true	

	#Names of the quality tests: they must match those specified in "qtList"
	untracked string EfficiencyTestName = "EfficiencyInRange"
	untracked string UnassEfficiencyTestName = "UnassEfficiencyInRange"

    }

    path p = {resolutionTest, efficiencyTest}

	
}


