process MONITOR = {    

	#Mapping
        es_source mapping = PoolDBESSource { VPSet toGet = {
                                      {string record = "DTReadOutMappingRcd"
                                       string tag = "twoSectors_map"}
                                     }
                                     bool loadAll = true
                                     string connect = "sqlite_file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/sector/twoSectors.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite_070/sector/twoSectorscatalog.xml"
                                     string timetype = "runnumber"
                                     untracked uint32 authenticationMethod = 1
                                   }

	# DB writing 
	service = PoolDBOutputService{
	  string connect = "sqlite_file:noisyChannels.db"    
          #string connect = "relationalcatalog_oracle://devdb10/CMS_COND_GENERAL"    	
          string timetype = "runnumber"    
          string tag ="commissioning_noise"
	  untracked string containerName = "DTStatusFlag"
	  untracked uint32 authenticationMethod = 0
	  untracked string catalog = "file:noisyChannelscatalog.xml"
	}


	#Geometry
        include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
        include "Geometry/DTGeometry/data/dtGeometry.cfi"


	# File Reader
	source = DaqSource{ string reader = "DTROS8FileReader"
                            untracked int32 maxEvents = 25000
                            PSet pset = { string fileName ="twoSector.raw"
                                        #   untracked bool isRaw = true 
					}
        }

	# Unpacker
        module dtunpacker = DTUnpackingModule{
                string dataType = "ROS8"
                #untracked bool debugMode = false
                #untracked bool isRaw = true
                untracked int32 dduID = 730
                #untracked bool performDataIntegrityMonitor = false
        }

	# the nosieJob
	module noiseJob = DQMDTNoiseStandaloneTest {
		untracked string outputFile = "DTNoiseTest.root"	
		untracked int32 eventToAnalyze = 20000
		untracked double tolerance = 0.5
		untracked int32 neighboringChannels = 3
		untracked string theTag = "commissioning_noise"
	}	

	service = DaqMonitorROOTBackEnd{}

	service = MessageLogger {

	   untracked vstring categories = { "FwkJob" }
	   untracked vstring categories = { "NoiseTestPrintOut" }

	   untracked vstring destinations = { "Warnings.txt", "Errors.txt", "cout" }
	   untracked PSet Warnings.txt = { untracked string threshold = "WARNING"    } 	   
	   untracked PSet Errors.txt   = { untracked string threshold = "ERROR"   }
	   untracked PSet cout         = { untracked string threshold = "INFO" 
					   untracked PSet NoiseTestPrintOut = { untracked int32 limit = 10000000 }
                	                   untracked PSet default = { untracked int32 limit = 0  }
					   untracked PSet FwkJob = { untracked int32 limit = 0 }
					}
	
           untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}
	   untracked PSet FrameworkJobReport.xml = {
	   	                     untracked PSet default = { untracked int32 limit = 0 }
	               		     untracked PSet FwkJob = { untracked int32 limit = 10000000 }
 	                        		} 
	}		



	path p = {dtunpacker, noiseJob}	


}
